package feature // this is the package name 
        feature // this is the namespace prefix
        "http://org.owltext/feature" // the namespace URI 
	{

	@"OWL_CONSTRAINT"("Root Feature needs to be mandatory."="(MandatoryFeature) or (Feature_parent min 1 Feature)")
 	abstract class Feature {
		attribute EString name (1..1);
		attribute EString comments (0..-1);		
		
		containment reference AnyLiteral anyLiterals (0..-1);
		//attribute Operator operator (0..-1);
		
		containment reference Annotation annotation(0..1);
		containment reference Feature children (0..-1) opposite parent;
		
		reference Feature uniqueRelations (0..-1);
		ununique reference Feature nonUniqueRelations (0..-1);
		
		reference Feature parent (0..1) opposite children;
	}
	
	class MandatoryFeature extends Feature {
	}
	
	class OptionalFeature extends Feature {
	}
		
	class Annotation {
		attribute EString value (1..1);
	}
	
	abstract class AnyLiteral {		
	}	
	
	class AnyBoolean extends AnyLiteral{
		attribute EBoolean literal (1..1);
	}
	class AnyInt extends AnyLiteral{
		attribute EInt literal (1..1);
	}
	class AnyBigInteger extends AnyLiteral{
		attribute EBigInteger literal (1..1);
	}
	class AnyLong extends AnyLiteral{
		attribute ELong literal (1..1);
	}
	class AnyShort extends AnyLiteral{
		attribute EShort literal (1..1);
	}
	class AnyBigDecimal extends AnyLiteral{
		attribute EBigDecimal literal (1..1);
	}
	class AnyFloat extends AnyLiteral{
		attribute EFloat literal (1..1);
	}
	class AnyDouble extends AnyLiteral{
		attribute EDouble literal (1..1);
	}
	class AnyChar extends AnyLiteral{
		attribute EChar literal (1..1);
	}	
	class AnyByte extends AnyLiteral{
		attribute EByte literal (1..1);
	}
	/*
	class AnyDate extends AnyLiteral{
		attribute EDate literal (1..1);
	}
	*/	
	/*
	serializable enum Operator {
			1 : ADD = "+";
			2 : SUB = "-";
			3 : MUL = "*";
			4 : DIV = "/";
	}
	*/
}